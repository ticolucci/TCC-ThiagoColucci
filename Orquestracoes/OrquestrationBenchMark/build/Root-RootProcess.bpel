<?xml version="1.0" encoding="UTF-8"?>
<bpel:process xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:pnlk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ode="http://www.apache.org/ode/type/extension" xmlns:Son="http://example.com/Root/Son" xmlns:ns="http://bpms.intalio.com/FirstProcess/Time" xmlns:this="http://example.com/Root/RootProcess" xmlns:diag="http://example.com/Root" xmlns:Client="http://example.com/Root/Client" xmlns:tns="http://localhost:8080/bpms-console" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:bpmn="http://www.intalio.com/bpms" xmlns:atomic="http://ode.apache.org/atomicScope" queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" bpmn:label="RootProcess" name="RootProcess" bpmn:id="_3p_jsGHwEd-IGN2Wc6SeLw" targetNamespace="http://example.com/Root/RootProcess">
  <bpel:import namespace="http://localhost:8080/bpms-console" location="OrchestrationBenchmariking.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://example.com/Root" location="Root.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://example.com/Root/RootProcess" location="Root-RootProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:partnerLinks>
    <bpel:partnerLink name="clientAndRootProcessPlkVar" partnerLinkType="diag:ClientAndRootProcess" myRole="RootProcess_for_Client"/>
    <bpel:partnerLink name="sonAndRootProcessForPortTypeOrchestrationBenchmarkingPlkVar" partnerLinkType="diag:SonAndRootProcessForPortTypeOrchestrationBenchmarkingPlk" initializePartnerRole="yes" partnerRole="Son_for_RootProcess"/>
  </bpel:partnerLinks>
  <bpel:variables>
    <bpel:variable name="thisReceiveRequestRequestMsg" messageType="this:ReceiveRequestRequest"/>
    <bpel:variable name="thisReceiveRequestResponseMsg" messageType="this:ReceiveRequestResponse"/>
    <bpel:variable name="tnsFooBarRequestMsg" messageType="tns:getFoo"/>
    <bpel:variable name="tnsFooBarResponseMsg" messageType="tns:getBar"/>
  </bpel:variables>
  <bpel:sequence>
    <bpel:receive partnerLink="clientAndRootProcessPlkVar" portType="this:ForClient" operation="ReceiveRequest" variable="thisReceiveRequestRequestMsg" createInstance="yes" bpmn:label=" ReceiveRequest   " name="ReceiveRequest" bpmn:id="_SgoSIGH1Ed-IGN2Wc6SeLw"></bpel:receive>
    <bpel:assign name="init-variables-RootProcess" bpmn:id="_SgoSIGH1Ed-IGN2Wc6SeLw">
      <bpel:copy bpmn:label="$thisReceiveRequestResponseMsg">
        <bpel:from>
          <bpel:literal>
<ns:Response>
  <ns:bar></ns:bar>
</ns:Response></bpel:literal>
        </bpel:from>
        <bpel:to>$thisReceiveRequestResponseMsg.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$tnsFooBarRequestMsg">
        <bpel:from>
          <bpel:literal>
<tns:getFoo></tns:getFoo></bpel:literal>
        </bpel:from>
        <bpel:to>$tnsFooBarRequestMsg.parameters</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:assign bpmn:label="   Invoke  Son" name="Invoke__Son" bpmn:id="_lw4a0GH1Ed-IGN2Wc6SeLw">
      <bpel:copy>
        <bpel:from>$thisReceiveRequestRequestMsg.body/ns:foo</bpel:from>
        <bpel:to>$tnsFooBarRequestMsg.parameters</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:invoke partnerLink="sonAndRootProcessForPortTypeOrchestrationBenchmarkingPlkVar" portType="tns:OrchestrationBenchmarking" operation="fooBar" inputVariable="tnsFooBarRequestMsg" outputVariable="tnsFooBarResponseMsg" bpmn:label="   Invoke  Son" name="Invoke__Son-1" bpmn:id="_lw4a0GH1Ed-IGN2Wc6SeLw"></bpel:invoke>
    <bpel:reply partnerLink="clientAndRootProcessPlkVar" portType="this:ForClient" operation="ReceiveRequest" variable="thisReceiveRequestResponseMsg" bpmn:label="Message_End_Event" name="Message_End_Event" bpmn:id="_Vm1OEGH1Ed-IGN2Wc6SeLw"></bpel:reply>
  </bpel:sequence>
</bpel:process>